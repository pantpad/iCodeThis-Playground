@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  color: whitesmoke;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  --cardText: #1e1d21;

  --ElevatedCardContainerColor: #f7f2fa;
  --ElevatedCardContainerColorDark: #1d1b20;
  --ElevatedCardDisabledContainerColor: #fef7ff;
  --ElevatedCardHoverStateLayerColor: #1d1b20;
  --ElevatedCardContainerSurfaceTintLayerColor: rgb(103, 80, 164);
  --ElevatedCardContainerSurfaceTintLayerColorDark: #d0bcff;
  --ElevatedShadowColor: #000000;

  --saturation: 20%;
  --hue: 180;
  --transition: 0.15s;
  --glow: hsl(var(--hue, 150) 80% 70% / var(--alpha, 1));
  --border-radius: 12px;
  --border-width: calc(var(--thickness) * 1px);
  --active: 0;
  --glow-spread: calc(var(--spread) * 1deg);
}

@layer components {
  .card {
    border-radius: 12px;
    transition-property: box-shadow, opacity;
    transition-duration: 250ms, 150ms;
    transition-timing-function: ease-in-out;
    color: var(--cardText);
  }

  .card:hover {
    box-shadow: 0 0 0.15rem rgba(0, 0, 0, 0.5);
  }

  .card:active {
    opacity: 0.8;
  }

  .card.dragged {
    opacity: 0.16;
    box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.8);
  }

  .elevated-card {
    background-color: var(--ElevatedCardContainerColor);
  }

  .card button {
    --bg: radial-gradient(
        40% 50% at center 100%,
        hsl(var(--hue) var(--saturation) 72% / 0.15),
        transparent
      ),
      radial-gradient(
        80% 100% at center 120%,
        hsl(var(--hue) var(--saturation) 70% / 0.2),
        transparent
      ),
      hsl(260 0% 2%);
    background: var(--bg);
    font-weight: 500;
    cursor: pointer;
    display: grid;
    border: 0;
    place-items: center;
    white-space: nowrap;
    position: relative;
    box-shadow:
      0 0.025em 0.4em -0.02em hsl(0 0% 100% / 0.25),
      0 0.05em 0 0 hsl(260 0% 50%) inset,
      0 -0.05em 0 0 hsl(260 0% 0%) inset;
    transition:
      box-shadow var(--transition),
      scale var(--transition),
      background-img var(--transition);
    scale: calc(1 + (var(--active) * 0.025));
  }

  .card button::before {
    --saturation: 90%;
    content: "";
    position: absolute;
    inset: 0;
    border: 1px solid hsl(var(--hue) var(--saturation) 80% / 0.3);
    border-radius: var(--border-radius);
    pointer-events: none;
  }

  .card button .spark__container {
    position: absolute;
    inset: 0px;
    /* With a backdrop */
    overflow: hidden;
    /* Without a backdrop	*/
    /*mask: linear-gradient(transparent, transparent), linear-gradient(white, white);
    mask-clip: padding-box, border-box;
    mask-composite: intersect;
    border: var(--border-width) solid transparent;*/
  }

  .card .spark:before {
    content: "";
    position: absolute;
  }

  /* Purely to decorate the use of CQ elements sliding along */
  .card .spark:after {
    /*	background: red;*/
    content: "";
    position: absolute;
    inset: 0;
    z-index: -1;
  }

  /* Optional backdrop â€“ For some reason, if you go with the mask-composite, you lose the glow... */
  .card .backdrop {
    position: absolute;
    inset: 0;
    background:
      linear-gradient(transparent 5%, hsl(0 0% 0% / 0.5), transparent)
        padding-box,
      radial-gradient(
          40% 50% at center 100%,
          hsl(var(--hue) var(--saturation) 72% / 0.15),
          transparent
        )
        padding-box,
      radial-gradient(
          80% 100% at center 120%,
          hsl(var(--hue) var(--saturation) 70% / 0.2),
          transparent
        )
        padding-box,
      linear-gradient(
          hsl(var(--hue) var(--saturation) 5%),
          hsl(var(--hue) var(--saturation) 4%)
        )
        padding-box;
    border: var(--border-width) solid transparent;
    border-radius: var(--border-radius);
    transition: background-img var(--transition) opacity var(--transition);
    /*	opacity: 0;*/
  }

  .card .glows {
    filter: blur(calc(var(--blur) * 1px));
    container-type: size;
    position: absolute;
    inset: 0;
  }

  .card button > .spark__container {
    container-type: size;
  }

  .card button .spark:nth-of-type(2) {
    rotate: 180deg;
    animation-direction: alternate-reverse;
  }

  .card button .spark {
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    aspect-ratio: 1;
    border-radius: 0;
    overflow: visible;
    mask: none;
    animation: slide calc(var(--speed) * 1s) ease-in-out infinite alternate;
    animation-play-state: paused;
  }

  .card button:hover .spark {
    animation-play-state: running;
  }

  .card button .spark:before {
    inset: -100%;
    background: conic-gradient(
      from calc(270deg - (var(--glow-spread) * 0.5)),
      var(--glow) 0,
      var(--glow) var(--glow-spread),
      transparent var(--glow-spread)
    );
    translate: 0 0;
    transform: rotate(0deg);
    width: auto;
    animation: spin calc(var(--speed) * 2s) infinite linear;
    animation-play-state: paused;
  }

  .card button:is(:hover, :focus-visible) .spark:before {
    animation-play-state: running;
  }

  /* Overrides */
  .card button .spark {
    background: transparent;
  }
  .card button .spark__container {
    border-radius: var(--border-radius);
    opacity: 0;
  }

  .card .spark {
    transition: opacity var(--transition);
    opacity: 0;
  }

  .card button:is(:hover, :focus-visible) .spark {
    opacity: 1;
  }

  .card
    button:is(:hover, :focus-visible)
    .spark__container:not(.spark__container--reveal) {
    animation: reveal calc(var(--window) * 1s) both;
  }

  @keyframes reveal {
    0%,
    100% {
      opacity: 0;
    }
    20%,
    80% {
      opacity: 1;
    }
  }
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

li {
  list-style: none;
}

a {
  color: inherit;
  text-decoration: none;
}

h1,
h2,
h3,
h4 {
  text-wrap: balance;
}

p {
  text-wrap: pretty;
}

button {
  background: none;
  border: none;
  font: inherit;
  cursor: pointer;
}

html {
  scroll-behavior: smooth;
}

body {
  background-color: rgba(71, 60, 108, 0.9);
  min-height: 100svh;
}
